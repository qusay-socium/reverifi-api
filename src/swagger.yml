openapi: 3.0.0

info:
  version: 1.0.0
  title: Reverifi API

tags:
  - name: Authentication
    description: Authentication endpoints
  - name: User information
    description: User information endpoints
  - name: Listings
    description: Listings endpoints
  - name: Listing types
    description: Listing types endpoints
  - name: Property types
    description: Property types endpoints
  - name: Roles
    description: Roles endpoints
  - name: Features
    description: Features endpoints

paths:
  /api/auth/signup:
    post:
      tags:
        - Authentication
      summary: Creates a user.
      description: Sign up user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: xyz@xyz.com
                password:
                  type: string
                  example: x@adek1e$
                name:
                  type: string
                  example: john
                isVerified:
                  type: boolean
                  example: true
                phone:
                  type: string
                  example: 0092xxxxxx

      responses:
        '200':
          description: Token

  /api/auth/login:
    post:
      tags:
        - Authentication
      summary: Login
      description: Login by email and password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: xyz@xyz.com
                password:
                  type: string
                  example: x@adek1e$

      responses:
        '200':
          description: Token

  /api/users:
    get:
      security:
        - bearerAuth: []
      tags:
        - User information
      summary: User information
      description: get user information

      responses:
        '200':
          description: User information

    post:
      security:
        - bearerAuth: []
      tags:
        - User information
      summary: Create user information
      description: Create user information by token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: object
                  example:
                    england: london
                website:
                  type: string
                  example: www.england.com
                languages:
                  type: array
                  example:
                    - eng
                    - ar
                serviceAreas:
                  type: array
                  example:
                    - Europe
                socials:
                  type: object
                  example:
                    FB: www.fb.com/england
                aboutMe:
                  type: string
                  example: Broker

      responses:
        '200':
          description: User information related by request body

    patch:
      security:
        - bearerAuth: []
      tags:
        - User information
      summary: Update user information
      description: Update user information by token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  example:
                    name: name
                userInfo:
                  type: object
                  example:
                    address: address
                company:
                  type: object
                  example:
                    id: 97b07d0e-3e7e-4885-9930-b23db645f45f
                    name: company-name
                    email: email@test.com

      responses:
        '200':
          description: Updated user information

    delete:
      security:
        - bearerAuth: []
      tags:
        - User information
      summary: Delete user information
      description: Delete user information by token
      responses:
        '200':
          description: Confirmation message for deleting

  /api/users/roles:
    get:
      security:
        - bearerAuth: []
      tags:
        - User information
      summary: Get user Roles
      description: Get user roles

      responses:
        '200':
          description: Users information

    patch:
      description: Update user roles
      summary: Update user roles
      security:
        - bearerAuth: []
      tags:
        - User information
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                roles:
                  type: array
                  example:
                    - a784ef06-781a-4ea2-9323-eb77a543293a
                    - 695d7d66-135d-437b-b0d8-7fe37e831136
      responses:
        '200':
          description: Confirmation message.

  /api/users/roles/{type}:
    get:
      security:
        - bearerAuth: []
      tags:
        - User information
      summary: Get agent users
      description: Get agent users
      parameters:
        - in: path
          name: type
          schema:
            type: string
          required: true
          description: type of the user
      responses:
        '200':
          description: Users information

  /api/listings:
    get:
      security:
        - bearerAuth: []
      tags:
        - Listings
      summary: Listings data
      description: Get all Listings data
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'

      responses:
        '200':
          description: Listings data

    post:
      security:
        - bearerAuth: []
      tags:
        - Listings
      summary: Creating
      description: Create new list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isAgent:
                  type: boolean
                isOwner:
                  type: boolean
                  example: true
                features:
                  type: array
                  example:
                    - d4fa0e2f-4ab8-4673-84a1-911eb73abbbb
                    - 64d16b91-febb-4306-8893-609d706a7678
                overview:
                  type: string
                  example: John listing
                images:
                  type: array
                  example:
                    - image url ...
                    - image url ...
                country:
                  type: string
                  example: New york
                lang:
                  type: string
                  example: 34
                lat:
                  type: string
                  example: 11
                city:
                  type: string
                  example: Albany
                zipCode:
                  type: string
                  example: 12345
                street:
                  type: string
                  example: str 91
                propertyType:
                  type: string
                  example: test
                listingType:
                  type: string
                  example: test
                status:
                  type: string
                  example: test
                propertyCondition:
                  type: string
                  example: test
                address:
                  type: string
                  example: 638 Western Ave, Albany, NY 12203, United States
                offerType:
                  type: string
                  example: sell
                price:
                  type: number
                  example: 1
                bedrooms:
                  type: number
                  example: 1
                fullBathrooms:
                  type: number
                  example: 1
                rooms:
                  type: number
                  example: 1
                garage:
                  type: number
                  example: 1
                partialBathrooms:
                  type: number
                  example: 1
                homeArea:
                  type: object
                  example:
                    ft: 225
                lotArea:
                  type: object
                  example:
                    ft: 225
                lotDimensions:
                  type: object
                  example:
                    ft: 225

      responses:
        '200':
          description: Created company information

  /api/listings/{id}:
    get:
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of the list
      tags:
        - Listings
      summary: List information
      description: List information by id
      responses:
        '200':
          description: List information

    patch:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of the list
      tags:
        - Listings
      summary: Updating
      description: Update list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                isAgent:
                  type: boolean
                isOwner:
                  type: boolean
                  example: true
                features:
                  type: array
                  example:
                    - d4fa0e2f-4ab8-4673-84a1-911eb73abbbb
                    - 64d16b91-febb-4306-8893-609d706a7678
                overview:
                  type: string
                  example: John listing
                images:
                  type: array
                  example:
                    - image url ...
                    - image url ...
                country:
                  type: string
                  example: New york
                lang:
                  type: string
                  example: 34
                lat:
                  type: string
                  example: 11
                city:
                  type: string
                  example: Albany
                zipCode:
                  type: string
                  example: 12345
                street:
                  type: string
                  example: str 91
                propertyType:
                  type: string
                  example: test
                listingType:
                  type: string
                  example: test
                status:
                  type: string
                  example: test
                propertyCondition:
                  type: string
                  example: test
                address:
                  type: string
                  example: 638 Western Ave, Albany, NY 12203, United States
                offerType:
                  type: string
                  example: sell
                price:
                  type: number
                  example: 1
                bedrooms:
                  type: number
                  example: 1
                fullBathrooms:
                  type: number
                  example: 1
                rooms:
                  type: number
                  example: 1
                garage:
                  type: number
                  example: 1
                partialBathrooms:
                  type: number
                  example: 1
                homeArea:
                  type: object
                  example:
                    ft: 225
                lotArea:
                  type: object
                  example:
                    ft: 225
                lotDimensions:
                  type: object
                  example:
                    ft: 225

      responses:
        '200':
          description: Updated company information

    delete:
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: UUID of the list
      tags:
        - Listings
      summary: Delete list
      description: Delete list by token
      responses:
        '200':
          description: Confirmation message for deleting

  /api/listings/featured:
    get:
      tags:
        - Listings
      summary: Featured listings
      description: Get featured listings
      responses:
        '200':
          description: List information

  /api/listings/search:
    get:
      parameters:
        - in: query
          name: key
          schema:
            type: string
          description: Search key
      tags:
        - Listings
      summary: Search listings by city or zip code
      description: Search listings by city or zip code

      responses:
        '200':
          description: Listings data

  /api/listing-types:
    get:
      tags:
        - Listing types
      summary: Listing Types
      description: All Listing Types

      responses:
        '200':
          description: Listing Types

  /api/property-types:
    get:
      tags:
        - Property types
      summary: Property Types
      description: All Property Types

      responses:
        '200':
          description: Property Types

  /api/roles:
    get:
      security:
        - bearerAuth: []
      tags:
        - Roles
      summary: Get Roles
      description: Get roles

      responses:
        '200':
          description: Roles

  /api/features:
    get:
      tags:
        - Features
      summary: Features
      description: All Features

      responses:
        '200':
          description: Features

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    page:
      name: page
      in: query
      description: Page number
      required: false
      schema:
        type: integer
        format: int32
        default: 1
    limit:
      name: limit
      in: query
      description: Max items per page
      required: false
      schema:
        type: integer
        format: int32
        default: 30
